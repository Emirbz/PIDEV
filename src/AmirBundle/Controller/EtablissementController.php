<?php
/**
 * Created by PhpStorm.
 * User: Emir
 * Date: 12/02/2018
 * Time: 16:44
 */

namespace AmirBundle\Controller;






use AmirBundle\Entity\Etablissement;


use AmirBundle\Entity\Review;
use AmirBundle\Form\BeauteType;
use AmirBundle\Form\CultureType;
use AmirBundle\Form\HotelType;
use AmirBundle\Form\RestaurantType;

use AmirBundle\Form\ReviewType;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\File\File;
use Symfony\Component\HttpFoundation\Request;


class EtablissementController extends Controller
{
    public function ajout_restaurantAction(Request $request)

    {
        $restaurant = new Etablissement();

        $restaurant->setCategorie('Restaurant');
        $restaurant->setIduser($this->getUser());
        $form = $this->createForm(RestaurantType::class, $restaurant);



        $form->handleRequest($request);
        if ($form->isSubmitted() && ($form->isValid())) {
            $file = $restaurant->getImg1();

            $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();
            $file->move(
                $this->getParameter('brochures_directory'), $fileName);
            $restaurant->setImg1($fileName);
            $file2 = $restaurant->getimg2();

            $fileName2 = $this->generateUniqueFileName().'.'.$file2->guessExtension();
            $file2->move(
                $this->getParameter('brochures_directory'), $fileName2);
            $restaurant->setimg2($fileName2);

            $file3 = $restaurant->getimg3();
            $fileName3= $this->generateUniqueFileName().'.'.$file3->guessExtension();
            $file3->move(
                $this->getParameter('brochures_directory'), $fileName3);
            $restaurant->setimg3($fileName3);

            $em = $this->getDoctrine()->getManager();
            $em->persist($restaurant);
            $em->flush();
            return $this->redirectToRoute('App_bon_plan_list_restaurant');
        }
        return $this->render("@Amir/Etablissement/ajout_restaurant.html.twig"
            , array('form' => $form->createView()));

    }
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }
    /**
     * @return string
     */


    public function list_restaurantAction(Request $request)
    {
        $em = $this->getDoctrine()->getManager();
        $restaurant = $em->getRepository("AmirBundle:Etablissement")->findBy(array('categorie' => 'Restaurant'));
        $souscat = $em->CreateQuery("SELECT v  From SlimBundle:sous_categorie v where v.idCategorie=4");
        $soucatresult = $souscat->getResult();




        $tricat = $request->get('tricat');
        $tri = $request->get('tri');
        if ($request->isMethod('POST')) {
            ########tri cat #######

            if ($tricat != '') {
                if ($tricat='tous')
                {$restaurant = $em->getRepository("AmirBundle:Etablissement")->findBy(array('categorie' => 'Restaurant'));
                    return $this->render("AmirBundle:Etablissement:list_restaurant.html.twig",
                        array('restaurants' => $restaurant, 'souscat' => $soucatresult
                        ));

                }
                $restaurant = $em->CreateQuery("SELECT v  From AmirBundle:Etablissement v where v.categorie='Restaurant' AND v.souscat=$tricat")->getResult();
                return $this->render("AmirBundle:Etablissement:list_restaurant.html.twig",
                    array('restaurants' => $restaurant, 'souscat' => $soucatresult
                    ));
            }
            ######## tri cat ######
            ###########tri######
            if ($tri == 'triq') {
                $restaurant = $em->CreateQuery("SELECT v  From AmirBundle:Etablissement v where v.categorie='Restaurant' ORDER BY v.moyqualite DESC")->getResult();
                return $this->render("AmirBundle:Etablissement:list_restaurant.html.twig",
                    array('restaurants' => $restaurant, 'souscat' => $soucatresult
                    ));
            }
            if ($tri == 'tris') {
                $restaurant = $em->CreateQuery("SELECT v  From AmirBundle:Etablissement v where v.categorie='Restaurant' ORDER BY v.moyservice DESC")->getResult();
                return $this->render("AmirBundle:Etablissement:list_restaurant.html.twig",
                    array('restaurants' => $restaurant, 'souscat' => $soucatresult
                    ));
            }
            if ($tri == 'trid') {
                $restaurant = $em->CreateQuery("SELECT v  From AmirBundle:Etablissement v where v.categorie='Restaurant'")->getResult();
                return $this->render("AmirBundle:Etablissement:list_restaurant.html.twig",
                    array('restaurants' => $restaurant, 'souscat' => $soucatresult
                    ));
            }

            #############tri ###########

            ##############recherche vide ###############
            if ($request->get('name') == '') {
                return $this->redirectToRoute('App_bon_plan_list_restaurant');
            }



            ########recherche vide #########

            ###### recherche like nom #########
            if  ($request->get('name')!='' )  {
                $name = $request->get('name');
                $restaurant = $em->CreateQuery("SELECT v  From AmirBundle:Etablissement v where v.categorie='Restaurant' AND (v.name LIKE '%$name%'  or v.address='$name' ) ")->getResult();
                return $this->render("AmirBundle:Etablissement:list_restaurant.html.twig",
                    array('restaurants' => $restaurant,'souscat' =>  $soucatresult
                    ));
            }
            ########### recherche like nom ########
        }




        return $this->render("AmirBundle:Etablissement:list_restaurant.html.twig",
            array('restaurants' => $restaurant,'souscat' =>  $soucatresult
            ));
    }


    public function updateAction(Request $request)
    {
        $id = $request->get('id');
        $em = $this->getDoctrine()->getManager();
        $restaurant = $em->getRepository("AmirBundle:Etablissement")
            ->find($id);
        $form = $this->createForm(RestaurantType::class, $restaurant);



        $form->handleRequest($request);
        if($form->isValid()){
            $file = $restaurant->getImg1();
            $fileName = $this->generateUniqueFileName() . '.' . $file->guessExtension();
            $file->move($this->getParameter('brochures_directory'), $fileName);
            $restaurant->setImg1($fileName);
            ##############
            $file2 = $restaurant->getimg2();
            $fileName2 = $this->generateUniqueFileName() . '.' . $file2->guessExtension();
            $file2->move($this->getParameter('brochures_directory'), $fileName2);
            $restaurant->setimg2($fileName2);
            #########
            $file3 = $restaurant->getimg3();
            $fileName3 = $this->generateUniqueFileName() . '.' . $file3->guessExtension();
            $file3->move($this->getParameter('brochures_directory'), $fileName3);
            $restaurant->setimg3($fileName3);
            ########
            $em->persist ($restaurant);
            $em->flush();
            return $this->redirectToRoute('App_bon_plan_list_restaurant');

        }
        return $this->render("@Amir/Etablissement/update_restaurant.html.twig",array("form"=>$form->createView()));
    }

       public function updatehotelAction(Request $request)
    {
        $id = $request->get('id');
        $em = $this->getDoctrine()->getManager();
        $restaurant = $em->getRepository("AmirBundle:Etablissement")
            ->find($id);
        $form = $this->createForm(HotelType::class, $restaurant);


        $form->handleRequest($request);
        if($form->isValid()){
            $file = $restaurant->getImg1();
            $fileName = $this->generateUniqueFileName() . '.' . $file->guessExtension();
            $file->move($this->getParameter('brochures_directory'), $fileName);
            $restaurant->setImg1($fileName);
            ##############
            $file2 = $restaurant->getimg2();
            $fileName2 = $this->generateUniqueFileName() . '.' . $file2->guessExtension();
            $file2->move($this->getParameter('brochures_directory'), $fileName2);
            $restaurant->setimg2($fileName2);
            #########
            $file3 = $restaurant->getimg3();
            $fileName3 = $this->generateUniqueFileName() . '.' . $file3->guessExtension();
            $file3->move($this->getParameter('brochures_directory'), $fileName3);
            $restaurant->setimg3($fileName3);
            ########
            $em->persist ($restaurant);
            $em->flush();
            return $this->redirectToRoute('App_bon_plan_profil_hotel',array('id'=>$id));

        }
        return $this->render("@Amir/Hotel/update_hotel.html.twig",array("form"=>$form->createView()));
    }

    public function deleteAction($id)
    {

        $em = $this->getDoctrine()->getManager();
        $restaurant = $em->getRepository("AmirBundle:Etablissement")->find($id);
        $em->remove($restaurant);
        $em->flush();
        return $this->redirectToRoute("App_bon_plan_list_restaurant");
    }


    public function profil_restaurantAction(Request $request,$id)
    {


        $em = $this->getDoctrine()->getManager();
        $restaurant = $em->getRepository("AmirBundle:Etablissement")->findBy(array('id' => $id));

        $review = new Review();
        $rest = $restaurant[0];
        $moy = $em->CreateQuery("SELECT v  From AmirBundle:Review v where v.idetab=$id");
        $moy1=$moy->getResult();
        $count=count($moy1);
        $moyqualite=$rest->getMoyqualite();
        $moyservice=$rest->getMoyservice();
        $totalqualite=$rest->getTotalqualite();
        $totalservice=$rest->getTotalservice();
        $review->setIdetab($rest);
        $review->setIduser($this->getUser());
        $review->setDate(new \DateTime('now'));
        $form = $this->createForm(ReviewType::class, $review);
        $form->handleRequest($request);

        if ($form->isSubmitted() && ($form->isValid())&& ($request->isMethod('post'))) {
            $em = $this->getDoctrine()->getManager();
        $service = $request->get('ratingservice');
        $qualite = $request->get('ratingqualite');

            if ($count==0)
            {
                $rest->setMoyservice($service);
                $rest->setMoyqualite($qualite);
            }
                if ($count>0)
                {
                    $rest->setMoyservice(($service+$totalservice)/($count+1));
                    $rest->setMoyqualite(($qualite+$totalqualite)/($count+1));
                }

                $review->setQualite($qualite);
            $review->setService($service);

            $rest->setTotalqualite($rest->getTotalqualite()+$qualite);
            $rest->setTotalservice($rest->getTotalservice()+$service);
           $em->persist($review);
            $em->flush();
        return $this->redirectToRoute('App_bon_plan_profil_restaurant',array('id'=>$id));

        }
        $comments = $em->CreateQuery("SELECT v  From AmirBundle:Review v where v.idetab=$id");
        $commentsresult = $comments->getResult();
        $query = $em->createQuery("SELECT v  From AmirBundle:Review v where v.idetab=$id");
        $paginator  = $this->get('knp_paginator');
        $pagination = $paginator->paginate(
            $query, /* query NOT result */
            $request->query->getInt('page', 1)/*page number*/,
            3/*limit per page*/
        );
        $count2=count($commentsresult);



        return $this->render('@Amir/Etablissement/profil_restaurant.html.twig',
            array('restaurants' => $restaurant,
                'form'=>$form->createView(),
                'comments'=>$commentsresult,
                'moyqualite'=>$moyqualite,
                'moyservice'=>$moyservice,
                'nbruser'=>$count2,
                'pagination' => $pagination
            )
        );
    }


    public function profil_hotelAction(Request $request,$id)
    {


        $em = $this->getDoctrine()->getManager();
        $restaurant = $em->getRepository("AmirBundle:Etablissement")->findBy(array('id' => $id));

        $review = new Review();
        $rest = $restaurant[0];
        $moy = $em->CreateQuery("SELECT v  From AmirBundle:Review v where v.idetab=$id");
        $moy1=$moy->getResult();
        $count=count($moy1);
        $moyqualite=$rest->getMoyqualite();
        $moyservice=$rest->getMoyservice();
        $totalqualite=$rest->getTotalqualite();
        $totalservice=$rest->getTotalservice();
        $review->setIdetab($rest);
        $review->setIduser($this->getUser());
        $review->setDate(new \DateTime('now'));
        $form = $this->createForm(ReviewType::class, $review);
        $form->handleRequest($request);

        if ($form->isSubmitted() && ($form->isValid())&& ($request->isMethod('post'))) {
            $em = $this->getDoctrine()->getManager();
            $service = $request->get('ratingservice');
            $qualite = $request->get('ratingqualite');

            if ($count==0)
            {
                $rest->setMoyservice($service);
                $rest->setMoyqualite($qualite);
            }
            if ($count>0)
            {
                $rest->setMoyservice(($service+$totalservice)/($count+1));
                $rest->setMoyqualite(($qualite+$totalqualite)/($count+1));
            }

            $review->setQualite($qualite);
            $review->setService($service);

            $rest->setTotalqualite($rest->getTotalqualite()+$qualite);
            $rest->setTotalservice($rest->getTotalservice()+$service);
            $em->persist($review);
            $em->flush();
            return $this->redirectToRoute('App_bon_plan_profil_hotel',array('id'=>$id));

        }
        $comments = $em->CreateQuery("SELECT v  From AmirBundle:Review v where v.idetab=$id");
        $commentsresult = $comments->getResult();
        $query = $em->createQuery("SELECT v  From AmirBundle:Review v where v.idetab=$id");
        $paginator  = $this->get('knp_paginator');
        $pagination = $paginator->paginate(
            $query, /* query NOT result */
            $request->query->getInt('page', 1)/*page number*/,
            3/*limit per page*/
        );
        $count2=count($commentsresult);



        return $this->render('@Amir/Hotel/profil_hotel.html.twig',
            array('restaurants' => $restaurant,
                'form'=>$form->createView(),
                'comments'=>$commentsresult,
                'moyqualite'=>$moyqualite,
                'moyservice'=>$moyservice,
                'nbruser'=>$count2,
                'pagination' => $pagination
            )
        );
    }



    public function list_hotelsAction(Request $request)
    {
        $em = $this->getDoctrine()->getManager();
        $restaurant = $em->getRepository("AmirBundle:Etablissement")->findBy(array('categorie' => 'Hotel'));
        $souscat = $em->CreateQuery("SELECT v  From SlimBundle:sous_categorie v where v.idCategorie=3");
        $soucatresult = $souscat->getResult();




        $tricat = $request->get('tricat');
        $tri = $request->get('tri');
        if ($request->isMethod('POST')) {
            ########tri cat #######

            if ($tricat != '') {
                $restaurant = $em->CreateQuery("SELECT v  From AmirBundle:Etablissement v where v.categorie='Hotel' AND v.souscat=$tricat")->getResult();
                return $this->render("@Amir/Hotel/list_hotels.html.twig",
                    array('restaurants' => $restaurant, 'souscat' => $soucatresult
                    ));
            }
            ######## tri cat ######
            ###########tri######
            if ($tri == 'triq') {
                $restaurant = $em->CreateQuery("SELECT v  From AmirBundle:Etablissement v where v.categorie='Hotel' ORDER BY v.moyqualite DESC")->getResult();
                return $this->render("@Amir/Hotel/list_hotels.html.twig",
                    array('restaurants' => $restaurant, 'souscat' => $soucatresult
                    ));
            }
            if ($tri == 'tris') {
                $restaurant = $em->CreateQuery("SELECT v  From AmirBundle:Etablissement v where v.categorie='Hotel' ORDER BY v.moyservice DESC")->getResult();
                return $this->render("@Amir/Hotel/list_hotels.html.twig",
                    array('restaurants' => $restaurant, 'souscat' => $soucatresult
                    ));
            }
            if ($tri == 'trid') {
                $restaurant = $em->CreateQuery("SELECT v  From AmirBundle:Etablissement v where v.categorie='Hotel'")->getResult();
                return $this->render("@Amir/Hotel/list_hotels.html.twig",
                    array('restaurants' => $restaurant, 'souscat' => $soucatresult
                    ));
            }

            #############tri ###########

            ##############recherche vide ###############
            if  ($request->get('name') == '' and $request->get('etoile') == 0) {
                return $this->redirectToRoute('App_bon_plan_list_hotels');
            }



            ########recherche vide #########

            ###### recherche like nom #########
            if  ($request->get('name')!='' and $request->get('etoile')!='' )  {
                $etoile =$request->get('etoile');
                $name = $request->get('name');
                $restaurant = $em->CreateQuery("SELECT v  From AmirBundle:Etablissement v where v.categorie='Hotel' AND (v.name LIKE '%$name%'  or v.address='$name' ) AND v.etoile=$etoile ")->getResult();
                return $this->render("@Amir/Hotel/list_hotels.html.twig",
                    array('restaurants' => $restaurant,'souscat' =>  $soucatresult
                    ));
            }
            if  ($request->get('name')=='' or  $request->get('etoile')=='' )  {
                $etoile =$request->get('etoile');
                $name = $request->get('name');
                $restaurant = $em->CreateQuery("SELECT v  From AmirBundle:Etablissement v where v.categorie='Hotel' AND (v.name LIKE '%$name%'  or v.address='$name' ) AND v.etoile=$etoile ")->getResult();
                return $this->render("@Amir/Hotel/list_hotels.html.twig",
                    array('restaurants' => $restaurant,'souscat' =>  $soucatresult
                    ));
            }
            ########### recherche like nom ########
        }




        return $this->render("@Amir/Hotel/list_hotels.html.twig",
            array('restaurants' => $restaurant,'souscat' =>  $soucatresult
            ));

    }

    public function list_beaute_et_bien_etreAction()
    {
        return $this->render('@Amir/Beauteetbienetre/list_beaute_et_bien_etre.html.twig');
    }

    public function ajout_etablissementAction()
    {
        return $this->render('@Amir/Etablissement/Ajout Etablissement.twig');
    }

    public function ajout_hotelAction(Request $request)
    {
        $restaurant = new Etablissement();
        $restaurant->setCategorie('Hotel');
        $restaurant->setIduser($this->getUser());

        $form = $this->createForm(HotelType::class, $restaurant);


        $form->handleRequest($request);
        if ($form->isSubmitted() && ($form->isValid())) {
            $file = $restaurant->getImg1();
            $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();
            $file->move(
                $this->getParameter('brochures_directory'), $fileName);
            $restaurant->setImg1($fileName);
            $file2 = $restaurant->getimg2();

            $fileName2 = $this->generateUniqueFileName().'.'.$file2->guessExtension();
            $file2->move(
                $this->getParameter('brochures_directory'), $fileName2);
            $restaurant->setimg2($fileName2);

            $file3 = $restaurant->getimg3();
            $fileName3= $this->generateUniqueFileName().'.'.$file3->guessExtension();
            $file3->move(
                $this->getParameter('brochures_directory'), $fileName3);
            $restaurant->setimg3($fileName3);

            $em = $this->getDoctrine()->getManager();
            $em->persist($restaurant);
            $em->flush();
            return $this->redirectToRoute('App_bon_plan_list_hotels');
        }
        return $this->render("@Amir/Hotel/ajout_hotel.html.twig"
            , array('form' => $form->createView()));
    }

    public function ajout_beauteAction(Request $request)

    {
        $restaurant = new Etablissement();

        $restaurant->setCategorie('Beauté et bien être');
        $restaurant->setIduser($this->getUser());
        $form = $this->createForm(BeauteType::class, $restaurant);


        $form->handleRequest($request);
        if ($form->isSubmitted() && ($form->isValid())) {
            $file = $restaurant->getImg1();

            $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();
            $file->move(
                $this->getParameter('brochures_directory'), $fileName);
            $restaurant->setImg1($fileName);
            $file2 = $restaurant->getimg2();

            $fileName2 = $this->generateUniqueFileName().'.'.$file2->guessExtension();
            $file2->move(
                $this->getParameter('brochures_directory'), $fileName2);
            $restaurant->setimg2($fileName2);

            $file3 = $restaurant->getimg3();
            $fileName3= $this->generateUniqueFileName().'.'.$file3->guessExtension();
            $file3->move(
                $this->getParameter('brochures_directory'), $fileName3);
            $restaurant->setimg3($fileName3);

            $em = $this->getDoctrine()->getManager();
            $em->persist($restaurant);
            $em->flush();
            return $this->redirectToRoute('App_bon_plan_list_beaute_et_bien_etre');
        }
        return $this->render("AmirBundle:Beauteetbienetre:ajout_beaute.html.twig"
            , array('form' => $form->createView()));

    }

    public function list_beauteAction(Request $request)
    {
        $em = $this->getDoctrine()->getManager();
        $restaurant = $em->getRepository("AmirBundle:Etablissement")->findBy(array('categorie' => 'Beauté et bien être'));
        $souscat = $em->CreateQuery("SELECT v  From SlimBundle:sous_categorie v where v.idCategorie=4");
        $soucatresult = $souscat->getResult();




        $tricat = $request->get('tricat');
        $tri = $request->get('tri');
        if ($request->isMethod('POST')) {
            ########tri cat #######

            if ($tricat != '') {
                $restaurant = $em->CreateQuery("SELECT v  From AmirBundle:Etablissement v where v.categorie='Beauté et bien être' AND v.souscat=$tricat")->getResult();
                return $this->render("AmirBundle:Beauteetbienetre:list_beaute_et_bien_etre.html.twig",
                    array('restaurants' => $restaurant, 'souscat' => $soucatresult
                    ));
            }
            ######## tri cat ######
            ###########tri######
            if ($tri == 'triq') {
                $restaurant = $em->CreateQuery("SELECT v  From AmirBundle:Etablissement v where v.categorie='Beauté et bien être' ORDER BY v.moyqualite DESC")->getResult();
                return $this->render("AmirBundle:Beauteetbienetre:list_beaute_et_bien_etre.html.twig",
                    array('restaurants' => $restaurant, 'souscat' => $soucatresult
                    ));
            }
            if ($tri == 'tris') {
                $restaurant = $em->CreateQuery("SELECT v  From AmirBundle:Etablissement v where v.categorie='Beauté et bien être' ORDER BY v.moyservice DESC")->getResult();
                return $this->render("AmirBundle:Beauteetbienetre:list_beaute_et_bien_etre.html.twig",
                    array('restaurants' => $restaurant, 'souscat' => $soucatresult
                    ));
            }
            if ($tri == 'trid') {
                $restaurant = $em->CreateQuery("SELECT v  From AmirBundle:Etablissement v where v.categorie='Beauté et bien être'")->getResult();
                return $this->render("AmirBundle:Beauteetbienetre:list_beaute_et_bien_etre.html.twig",
                    array('restaurants' => $restaurant, 'souscat' => $soucatresult
                    ));
            }

            #############tri ###########

            ##############recherche vide ###############
            if ($request->get('name') == '') {
                return $this->redirectToRoute('App_bon_plan_list_beaute_et_bien_etre');
            }



            ########recherche vide #########

            ###### recherche like nom #########
            if  ($request->get('name')!='' )  {
                $name = $request->get('name');
                $restaurant = $em->CreateQuery("SELECT v  From AmirBundle:Etablissement v where v.categorie='Beauté et bien être' AND (v.name LIKE '%$name%'  or v.address='$name' ) ")->getResult();
                return $this->render("AmirBundle:Beauteetbienetre:list_beaute_et_bien_etre.html.twig",
                    array('restaurants' => $restaurant,'souscat' =>  $soucatresult
                    ));
            }
            ########### recherche like nom ########
        }




        return $this->render("AmirBundle:Beauteetbienetre:list_beaute_et_bien_etre.html.twig",
            array('restaurants' => $restaurant,'souscat' =>  $soucatresult
            ));
    }

    public function profil_beauteAction(Request $request,$id)
    {
        $em = $this->getDoctrine()->getManager();
        $restaurant = $em->getRepository("AmirBundle:Etablissement")->findBy(array('id' => $id));

        $review = new Review();
        $rest = $restaurant[0];
        $moy = $em->CreateQuery("SELECT v  From AmirBundle:Review v where v.idetab=$id");
        $moy1=$moy->getResult();
        $count=count($moy1);
        $moyqualite=$rest->getMoyqualite();
        $moyservice=$rest->getMoyservice();
        $totalqualite=$rest->getTotalqualite();
        $totalservice=$rest->getTotalservice();
        $review->setIdetab($rest);
        $review->setIduser($this->getUser());
        $review->setDate(new \DateTime('now'));
        $form = $this->createForm(ReviewType::class, $review);
        $form->handleRequest($request);

        if ($form->isSubmitted() && ($form->isValid())&& ($request->isMethod('post'))) {
            $em = $this->getDoctrine()->getManager();
            $service = $request->get('ratingservice');
            $qualite = $request->get('ratingqualite');

            if ($count==0)
            {
                $rest->setMoyservice($service);
                $rest->setMoyqualite($qualite);
            }
            if ($count>0)
            {
                $rest->setMoyservice(($service+$totalservice)/($count+1));
                $rest->setMoyqualite(($qualite+$totalqualite)/($count+1));
            }

            $review->setQualite($qualite);
            $review->setService($service);

            $rest->setTotalqualite($rest->getTotalqualite()+$qualite);
            $rest->setTotalservice($rest->getTotalservice()+$service);
            $em->persist($review);
            $em->flush();
            return $this->redirectToRoute('App_bon_plan_profil_beaute',array('id'=>$id));

        }
        $comments = $em->CreateQuery("SELECT v  From AmirBundle:Review v where v.idetab=$id");
        $commentsresult = $comments->getResult();
        $query = $em->createQuery("SELECT v  From AmirBundle:Review v where v.idetab=$id");
        $paginator  = $this->get('knp_paginator');
        $pagination = $paginator->paginate(
            $query, /* query NOT result */
            $request->query->getInt('page', 1)/*page number*/,
            3/*limit per page*/
        );
        $count2=count($commentsresult);



        return $this->render('AmirBundle:Beauteetbienetre:profil_beaute.html.twig',
            array('restaurants' => $restaurant,
                'form'=>$form->createView(),
                'comments'=>$commentsresult,
                'moyqualite'=>$moyqualite,
                'moyservice'=>$moyservice,
                'nbruser'=>$count2,
                'pagination' => $pagination
            )
        );
    }




    public function updatebeauteAction(Request $request)
    {
        $id = $request->get('id');
        $em = $this->getDoctrine()->getManager();
        $restaurant = $em->getRepository("AmirBundle:Etablissement")
            ->find($id);
        $form = $this->createForm(BeauteType::class, $restaurant);



        $form->handleRequest($request);
        if($form->isValid()){
            $file = $restaurant->getImg1();
            $fileName = $this->generateUniqueFileName() . '.' . $file->guessExtension();
            $file->move($this->getParameter('brochures_directory'), $fileName);
            $restaurant->setImg1($fileName);
            ##############
            $file2 = $restaurant->getimg2();
            $fileName2 = $this->generateUniqueFileName() . '.' . $file2->guessExtension();
            $file2->move($this->getParameter('brochures_directory'), $fileName2);
            $restaurant->setimg2($fileName2);
            #########
            $file3 = $restaurant->getimg3();
            $fileName3 = $this->generateUniqueFileName() . '.' . $file3->guessExtension();
            $file3->move($this->getParameter('brochures_directory'), $fileName3);
            $restaurant->setimg3($fileName3);
            ########
            $em->persist ($restaurant);
            $em->flush();
            return $this->redirectToRoute('App_bon_plan_profil_beaute',array('id'=>$id));

        }
        return $this->render("@Amir/Beauteetbienetre/update_beaute.twig",array("form"=>$form->createView()));
    }
    public function ajout_cultureAction(Request $request)

    {
        $restaurant = new Etablissement();

        $restaurant->setCategorie('Espace Culturel');
        $restaurant->setIduser($this->getUser());
        $form = $this->createForm(CultureType::class, $restaurant);


        $form->handleRequest($request);
        if ($form->isSubmitted() && ($form->isValid())) {
            $file = $restaurant->getImg1();

            $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();
            $file->move(
                $this->getParameter('brochures_directory'), $fileName);
            $restaurant->setImg1($fileName);
            $file2 = $restaurant->getimg2();

            $fileName2 = $this->generateUniqueFileName().'.'.$file2->guessExtension();
            $file2->move(
                $this->getParameter('brochures_directory'), $fileName2);
            $restaurant->setimg2($fileName2);

            $file3 = $restaurant->getimg3();
            $fileName3= $this->generateUniqueFileName().'.'.$file3->guessExtension();
            $file3->move(
                $this->getParameter('brochures_directory'), $fileName3);
            $restaurant->setimg3($fileName3);

            $em = $this->getDoctrine()->getManager();
            $em->persist($restaurant);
            $em->flush();
            return $this->redirectToRoute('App_bon_plan_list_culture');
        }
        return $this->render("@Amir/Culture/ajout_culture.html.twig"
            , array('form' => $form->createView()));

    }

    public function list_cultureAction(Request $request)
    {
        $em = $this->getDoctrine()->getManager();
        $restaurant = $em->getRepository("AmirBundle:Etablissement")->findBy(array('categorie' => 'Espace Culturel'));
        $souscat = $em->CreateQuery("SELECT v  From SlimBundle:sous_categorie v where v.idCategorie=2");
        $soucatresult = $souscat->getResult();




        $tricat = $request->get('tricat');
        $tri = $request->get('tri');
        if ($request->isMethod('POST')) {
            ########tri cat #######

            if ($tricat != '') {
                $restaurant = $em->CreateQuery("SELECT v  From AmirBundle:Etablissement v where v.categorie='Espace Culturel' AND v.souscat=$tricat")->getResult();
                return $this->render("@Amir/Culture/list_culture.html.twig",
                    array('restaurants' => $restaurant, 'souscat' => $soucatresult
                    ));
            }
            ######## tri cat ######
            ###########tri######
            if ($tri == 'triq') {
                $restaurant = $em->CreateQuery("SELECT v  From AmirBundle:Etablissement v where v.categorie='Espace Culturel' ORDER BY v.moyqualite DESC")->getResult();
                return $this->render("@Amir/Culture/list_culture.html.twig",
                    array('restaurants' => $restaurant, 'souscat' => $soucatresult
                    ));
            }
            if ($tri == 'tris') {
                $restaurant = $em->CreateQuery("SELECT v  From AmirBundle:Etablissement v where v.categorie='Espace Culturel' ORDER BY v.moyservice DESC")->getResult();
                return $this->render("@Amir/Culture/list_culture.html.twig",
                    array('restaurants' => $restaurant, 'souscat' => $soucatresult
                    ));
            }
            if ($tri == 'trid') {
                $restaurant = $em->CreateQuery("SELECT v  From AmirBundle:Etablissement v where v.categorie='Espace Culturel'")->getResult();
                return $this->render("@Amir/Culture/list_culture.html.twig",
                    array('restaurants' => $restaurant, 'souscat' => $soucatresult
                    ));
            }

            #############tri ###########

            ##############recherche vide ###############
            if ($request->get('name') == '') {
                return $this->redirectToRoute('App_bon_plan_list_culture');
            }



            ########recherche vide #########

            ###### recherche like nom #########
            if  ($request->get('name')!='' )  {
                $name = $request->get('name');
                $restaurant = $em->CreateQuery("SELECT v  From AmirBundle:Etablissement v where v.categorie='Restaurant' AND (v.name LIKE '%$name%'  or v.address='$name' ) ")->getResult();
                return $this->render("@Amir/Culture/list_culture.html.twig",
                    array('restaurants' => $restaurant,'souscat' =>  $soucatresult
                    ));
            }
            ########### recherche like nom ########
        }




        return $this->render("@Amir/Culture/list_culture.html.twig",
            array('restaurants' => $restaurant,'souscat' =>  $soucatresult
            ));
    }

    public function profil_cultureAction(Request $request,$id)
    {

        $em = $this->getDoctrine()->getManager();
        $restaurant = $em->getRepository("AmirBundle:Etablissement")->findBy(array('id' => $id));

        $review = new Review();
        $rest = $restaurant[0];
        $moy = $em->CreateQuery("SELECT v  From AmirBundle:Review v where v.idetab=$id");
        $moy1=$moy->getResult();
        $count=count($moy1);
        $moyqualite=$rest->getMoyqualite();
        $moyservice=$rest->getMoyservice();
        $totalqualite=$rest->getTotalqualite();
        $totalservice=$rest->getTotalservice();
        $review->setIdetab($rest);
        $review->setIduser($this->getUser());
        $review->setDate(new \DateTime('now'));
        $form = $this->createForm(ReviewType::class, $review);
        $form->handleRequest($request);

        if ($form->isSubmitted() && ($form->isValid())&& ($request->isMethod('post'))) {
            $em = $this->getDoctrine()->getManager();
            $service = $request->get('ratingservice');
            $qualite = $request->get('ratingqualite');

            if ($count==0)
            {
                $rest->setMoyservice($service);
                $rest->setMoyqualite($qualite);
            }
            if ($count>0)
            {
                $rest->setMoyservice(($service+$totalservice)/($count+1));
                $rest->setMoyqualite(($qualite+$totalqualite)/($count+1));
            }

            $review->setQualite($qualite);
            $review->setService($service);

            $rest->setTotalqualite($rest->getTotalqualite()+$qualite);
            $rest->setTotalservice($rest->getTotalservice()+$service);
            $em->persist($review);
            $em->flush();
            return $this->redirectToRoute('App_bon_plan_profil_culture',array('id'=>$id));

        }
        $comments = $em->CreateQuery("SELECT v  From AmirBundle:Review v where v.idetab=$id");
        $commentsresult = $comments->getResult();
        $query = $em->createQuery("SELECT v  From AmirBundle:Review v where v.idetab=$id");
        $paginator  = $this->get('knp_paginator');
        $pagination = $paginator->paginate(
            $query, /* query NOT result */
            $request->query->getInt('page', 1)/*page number*/,
            3/*limit per page*/
        );
        $count2=count($commentsresult);



        return $this->render('@Amir/Culture/profil_culture.html.twig',
            array('restaurants' => $restaurant,
                'form'=>$form->createView(),
                'comments'=>$commentsresult,
                'moyqualite'=>$moyqualite,
                'moyservice'=>$moyservice,
                'nbruser'=>$count2,
                'pagination' => $pagination
            )
        );
    }
    public function updatecultureAction(Request $request)
    {
        $id = $request->get('id');
        $em = $this->getDoctrine()->getManager();
        $restaurant = $em->getRepository("AmirBundle:Etablissement")
            ->find($id);
        $form = $this->createForm(CultureType::class, $restaurant);



        $form->handleRequest($request);
        if($form->isValid()){
            $file = $restaurant->getImg1();
            $fileName = $this->generateUniqueFileName() . '.' . $file->guessExtension();
            $file->move($this->getParameter('brochures_directory'), $fileName);
            $restaurant->setImg1($fileName);
            ##############
            $file2 = $restaurant->getimg2();
            $fileName2 = $this->generateUniqueFileName() . '.' . $file2->guessExtension();
            $file2->move($this->getParameter('brochures_directory'), $fileName2);
            $restaurant->setimg2($fileName2);
            #########
            $file3 = $restaurant->getimg3();
            $fileName3 = $this->generateUniqueFileName() . '.' . $file3->guessExtension();
            $file3->move($this->getParameter('brochures_directory'), $fileName3);
            $restaurant->setimg3($fileName3);
            ########
            $em->persist ($restaurant);
            $em->flush();
            return $this->redirectToRoute('App_bon_plan_profil_culture',array('id'=>$id));

        }
        return $this->render("@Amir/Culture/update_culture.html.twig",array("form"=>$form->createView()));
    }}